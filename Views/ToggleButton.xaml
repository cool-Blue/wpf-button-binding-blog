<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

        <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="ViewStyles.xaml"></ResourceDictionary>
        </ResourceDictionary.MergedDictionaries>
    
        <!--Modified Control Template-->
        <ControlTemplate x:Key="ToggleButtonControlTemplate1" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" 
                        Value="{DynamicResource 
                                {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" 
                        Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" 
                        Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" 
                        Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" 
                        Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" 
                        Value="{StaticResource Button.Checked.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" 
                        Value="{StaticResource Button.Static.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" 
                        Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" 
                        Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" 
                        TargetName="contentPresenter" 
                        Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>

                <!--Toggle content based on state-->
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter TargetName="contentPresenter" Property="ContentPresenter.Content"
                        Value="{Binding Content[0], RelativeSource={RelativeSource TemplatedParent}}" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="False">
                    <Setter TargetName="contentPresenter" Property="ContentPresenter.Content"
                        Value="{Binding Content[1], RelativeSource={RelativeSource TemplatedParent}}" />
                </Trigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ToggleButton.IsChecked" Value="True" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" TargetName="border" 
                        Value="{StaticResource 
                            Button.MouseOver.Checked.Background}"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ToggleButton.IsChecked" Value="True" />
                        <Condition Property="IsPressed" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" TargetName="border" 
                        Value="{StaticResource 
                            Button.Pressed.Background}"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

</ResourceDictionary>